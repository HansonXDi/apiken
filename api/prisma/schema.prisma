// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios{
  //Clave primaria
  id Int @id @default(autoincrement())
  //Atributos
  direccion_correo String @unique
  contrasena String
  descripcion String? @db.Text
  fecha_creacion DateTime @default(now())
  nombre String
  //Relaciones con bloqueo
  direcciones_bloqueadas Direcciones_Bloqueadas[] @relation("bloqueadores")
  direcciones_que_me_han_bloqueado Direcciones_Bloqueadas[] @relation("bloqueados")
  //Relaciones con favoritos
  direcciones_favoritas Direcciones_Favoritas[] @relation("favoritadores")
  direcciones_que_me_han_favoritado Direcciones_Favoritas[] @relation("favoritos")
  
}

model Direcciones_Bloqueadas{
  //Clave primaria compuesta
  @@id([usuario_bloqueadorId, usuario_bloqueadoId])
  //Atributos
  direccion_bloqueada  String
  //Relaciones
  usuario_bloqueador Usuarios @relation("bloqueadores", fields: [usuario_bloqueadorId], references: [id])
  usuario_bloqueadorId Int
  usuario_bloqueado Usuarios @relation("bloqueados" ,fields: [usuario_bloqueadoId], references: [id])
  usuario_bloqueadoId Int
}

model Direcciones_Favoritas{
  //Clave primaria compuesta
  @@id([usuario_favoritadorId, usuario_favoritadoId])
  //Atributos
  direccion_favorita String
  //Relaciones
  usuario_favoritador Usuarios @relation("favoritadores", fields: [usuario_favoritadorId], references: [id])
  usuario_favoritadorId Int
  usuario_favoritado Usuarios @relation("favoritos", fields: [usuario_favoritadoId], references: [id])
  usuario_favoritadoId Int
}